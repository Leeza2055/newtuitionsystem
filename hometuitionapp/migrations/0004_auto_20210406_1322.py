# Generated by Django 3.1.3 on 2021-04-06 07:37

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('hometuitionapp', '0003_auto_20210404_2235'),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(blank=True, choices=[('Active', 'Active'), ('Inactive', 'Inactive'), ('Disabled', 'Disabled')], default='Inactive', max_length=50, null=True)),
                ('title', models.CharField(max_length=20)),
                ('image', models.ImageField(upload_to='event')),
                ('content', models.TextField()),
                ('date', models.DateField()),
                ('venue', models.CharField(max_length=50)),
                ('time', models.CharField(max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Facility',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(blank=True, choices=[('Active', 'Active'), ('Inactive', 'Inactive'), ('Disabled', 'Disabled')], default='Inactive', max_length=50, null=True)),
                ('title', models.CharField(max_length=20)),
                ('description', models.TextField()),
                ('icon', models.CharField(max_length=50)),
                ('image', models.ImageField(upload_to='Facility')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Faq',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(blank=True, choices=[('Active', 'Active'), ('Inactive', 'Inactive'), ('Disabled', 'Disabled')], default='Inactive', max_length=50, null=True)),
                ('question', models.CharField(max_length=512)),
                ('answer', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(blank=True, choices=[('Active', 'Active'), ('Inactive', 'Inactive'), ('Disabled', 'Disabled')], default='Inactive', max_length=50, null=True)),
                ('sender', models.CharField(max_length=100)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('subject', models.CharField(max_length=200)),
                ('message', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Notice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(blank=True, choices=[('Active', 'Active'), ('Inactive', 'Inactive'), ('Disabled', 'Disabled')], default='Inactive', max_length=50, null=True)),
                ('title', models.CharField(max_length=1024)),
                ('content', models.TextField(blank=True, null=True)),
                ('notice_type', models.CharField(choices=[('info', 'Info'), ('success', 'Success'), ('warning', 'Warning'), ('danger', 'Danger')], max_length=100)),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Subscriber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(blank=True, choices=[('Active', 'Active'), ('Inactive', 'Inactive'), ('Disabled', 'Disabled')], default='Inactive', max_length=50, null=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Testimonials',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(blank=True, choices=[('Active', 'Active'), ('Inactive', 'Inactive'), ('Disabled', 'Disabled')], default='Inactive', max_length=50, null=True)),
                ('name', models.CharField(max_length=20)),
                ('sayings', models.TextField()),
                ('current_engagement', models.CharField(max_length=50)),
                ('image', models.ImageField(upload_to='testimonials')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TicketRaise',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(blank=True, choices=[('Active', 'Active'), ('Inactive', 'Inactive'), ('Disabled', 'Disabled')], default='Inactive', max_length=50, null=True)),
                ('sender_id', models.PositiveIntegerField()),
                ('receiver_id', models.PositiveIntegerField()),
                ('issue_type', models.CharField(choices=[('General', 'General'), ('Account', 'Account'), ('Other', 'Other')], max_length=200)),
                ('issue', models.TextField()),
                ('issue_solved', models.BooleanField(default=False)),
                ('receiver_type', models.ForeignKey(limit_choices_to=models.Q(models.Q(('app_label', 'hometuitionapp'), ('model', 'hometuitionsystem')), models.Q(('app_label', 'hometuitionapp'), ('model', 'teacher')), _connector='OR'), on_delete=django.db.models.deletion.CASCADE, related_name='trreceivers', to='contenttypes.contenttype')),
                ('sender_type', models.ForeignKey(limit_choices_to=models.Q(models.Q(('app_label', 'hometuitionapp'), ('model', 'teacher')), models.Q(('app_label', 'hometuitionapp'), ('model', 'student')), _connector='OR'), on_delete=django.db.models.deletion.CASCADE, related_name='trsenders', to='contenttypes.contenttype')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='teacherstudentfee',
            name='payment_data',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.CreateModel(
            name='TicketRaiseRemark',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(blank=True, choices=[('Active', 'Active'), ('Inactive', 'Inactive'), ('Disabled', 'Disabled')], default='Inactive', max_length=50, null=True)),
                ('issue_remark', models.TextField(blank=True, null=True)),
                ('issue_closing_date', models.DateTimeField(blank=True, null=True)),
                ('sender_id', models.PositiveIntegerField()),
                ('is_problem_solver', models.BooleanField(blank=True, default=False, null=True)),
                ('sender_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trrsenders', to='contenttypes.contenttype')),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hometuitionapp.ticketraise')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
